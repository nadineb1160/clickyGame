{"ast":null,"code":"var _jsxFileName = \"/Users/nadinebundschuh/Desktop/UCBE-bootcamp/18-ClickyGame/memoryGame/memory-app/src/App.js\";\nimport React, { Component } from 'react'; // import PictureContainer from \"./components/PictureContainer\";\n\nimport { Container } from \"./components/Grid\";\nimport Nav from \"./components/Nav\"; // import Footer from \"./components/Footer\";\n\nimport './App.css';\nimport pictures from \"./photos.json\";\nimport PictureContainer from './components/PictureContainer';\nimport Picture from \"./components/Picture\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pictures,\n      picIds: [],\n      start: false,\n      correct: false,\n      score: 0,\n      topScore: 0\n    };\n\n    this.shuffle = () => {\n      // Shuffle pictures\n      this.pictures.sort(() => Math.random() - 0.5);\n    };\n\n    this.update = () => {\n      this.shuffle();\n      this.setState({\n        score: this.state.score + 1\n      });\n      this.checkTopScore();\n    };\n\n    this.checkTopScore = () => {\n      // If high score beat\n      if (this.state.score > this.state.topScore) {\n        // Update high score\n        this.setState({\n          topScore: this.state.score\n        });\n      }\n    };\n\n    this.reset = () => {\n      // Shuffle cards\n      // Reset score\n      this.setState({\n        start: false\n      });\n    };\n\n    this.handleOnClick = id => {\n      // if picture empty \n      // Start game\n      if (pictures.length === 0) {\n        this.setState({\n          start: true\n        }); // this.shuffle();\n      } // Check if id in pictures\n      else if (this.state.picIds.includes(id)) {\n          // set correct to false\n          this.setState({\n            correct: false\n          }); // Reset\n        } else {\n          // Clicked new picture\n          let pics = this.state.picIds;\n          pics.push(id);\n          console.log(id);\n          this.setState({\n            picIds: pics\n          });\n          this.setState({\n            correct: true\n          }); // Add to score\n          // Shuffle\n\n          this.update();\n        }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      start: this.state.start,\n      correct: this.state.correct,\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PictureContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, this.state.pictures.map(picture => /*#__PURE__*/React.createElement(Picture, {\n      id: picture.id,\n      key: picture.key,\n      image: picture.image,\n      onClick: this.handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nadinebundschuh/Desktop/UCBE-bootcamp/18-ClickyGame/memoryGame/memory-app/src/App.js"],"names":["React","Component","Container","Nav","pictures","PictureContainer","Picture","App","state","picIds","start","correct","score","topScore","shuffle","sort","Math","random","update","setState","checkTopScore","reset","handleOnClick","id","length","includes","pics","push","console","log","render","map","picture","key","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,SAAT,QAAyB,mBAAzB;AACA,OAAOC,GAAP,MAAgB,kBAAhB,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNJ,MAAAA,QADM;AAENK,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,KAAK,EAAE,KAHD;AAINC,MAAAA,OAAO,EAAE,KAJH;AAKNC,MAAAA,KAAK,EAAE,CALD;AAMNC,MAAAA,QAAQ,EAAE;AANJ,KADkB;;AAAA,SAY1BC,OAZ0B,GAYhB,MAAM;AACd;AACA,WAAKV,QAAL,CAAcW,IAAd,CAAmB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAzC;AAED,KAhByB;;AAAA,SAkB1BC,MAlB0B,GAkBjB,MAAM;AACb,WAAKJ,OAAL;AACA,WAAKK,QAAL,CAAc;AAACP,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KAAX,GAAmB;AAA3B,OAAd;AACA,WAAKQ,aAAL;AACD,KAtByB;;AAAA,SAwB1BA,aAxB0B,GAwBV,MAAM;AACpB;AACA,UAAI,KAAKZ,KAAL,CAAWI,KAAX,GAAmB,KAAKJ,KAAL,CAAWK,QAAlC,EAA4C;AAC1C;AACA,aAAKM,QAAL,CAAc;AAACN,UAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWI;AAAtB,SAAd;AACD;AACF,KA9ByB;;AAAA,SAgC1BS,KAhC0B,GAgClB,MAAM;AACZ;AACA;AACA,WAAKF,QAAL,CAAe;AAAET,QAAAA,KAAK,EAAE;AAAT,OAAf;AAED,KArCyB;;AAAA,SAuC1BY,aAvC0B,GAuCTC,EAAD,IAAQ;AACtB;AACA;AACA,UAAInB,QAAQ,CAACoB,MAAT,KAAoB,CAAxB,EAA2B;AACzB,aAAKL,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAE;AAAT,SAAd,EADyB,CAEzB;AACD,OAHD,CAIA;AAJA,WAKK,IAAI,KAAKF,KAAL,CAAWC,MAAX,CAAkBgB,QAAlB,CAA2BF,EAA3B,CAAJ,EAAoC;AACvC;AACA,eAAKJ,QAAL,CAAc;AAAER,YAAAA,OAAO,EAAE;AAAX,WAAd,EAFuC,CAGvC;AACD,SAJI,MAIE;AACL;AACA,cAAIe,IAAI,GAAG,KAAKlB,KAAL,CAAWC,MAAtB;AACAiB,UAAAA,IAAI,CAACC,IAAL,CAAUJ,EAAV;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACA,eAAKJ,QAAL,CAAc;AAAEV,YAAAA,MAAM,EAAEiB;AAAV,WAAd;AACA,eAAKP,QAAL,CAAc;AAAER,YAAAA,OAAO,EAAE;AAAX,WAAd,EANK,CAOL;AACA;;AACA,eAAKO,MAAL;AAED;AAEF,KAhEyB;AAAA;;AAkE1BY,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWE,KADpB;AAEE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAFtB;AAGE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,KAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKL,KAAL,CAAWJ,QAAX,CAAoB2B,GAApB,CAAwBC,OAAO,iBAC9B,oBAAC,OAAD;AACE,MAAA,EAAE,EAAEA,OAAO,CAACT,EADd;AAEE,MAAA,GAAG,EAAES,OAAO,CAACC,GAFf;AAGE,MAAA,KAAK,EAAED,OAAO,CAACE,KAHjB;AAIE,MAAA,OAAO,EAAE,KAAKZ,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CARF,CADF;AAuBD;;AA1FyB;;AA6F5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import PictureContainer from \"./components/PictureContainer\";\nimport { Container} from \"./components/Grid\";\nimport Nav from \"./components/Nav\";\n// import Footer from \"./components/Footer\";\nimport './App.css';\nimport pictures from \"./photos.json\"\nimport PictureContainer from './components/PictureContainer';\nimport Picture from \"./components/Picture\";\n\n\nclass App extends Component {\n  state = {\n    pictures,\n    picIds: [],\n    start: false,\n    correct: false,\n    score: 0,\n    topScore: 0\n\n  };\n\n\n  shuffle = () => {\n    // Shuffle pictures\n    this.pictures.sort(() => Math.random() - 0.5);\n\n  }\n\n  update = () => {\n    this.shuffle();\n    this.setState({score: this.state.score + 1});\n    this.checkTopScore();\n  }\n\n  checkTopScore = () => {\n    // If high score beat\n    if (this.state.score > this.state.topScore) {\n      // Update high score\n      this.setState({topScore: this.state.score});\n    }\n  }\n\n  reset = () => {\n    // Shuffle cards\n    // Reset score\n    this.setState( { start: false });\n\n  }\n\n  handleOnClick = (id) => {\n    // if picture empty \n    // Start game\n    if (pictures.length === 0) {\n      this.setState({ start: true });\n      // this.shuffle();\n    }\n    // Check if id in pictures\n    else if (this.state.picIds.includes(id)) {\n      // set correct to false\n      this.setState({ correct: false });\n      // Reset\n    } else {\n      // Clicked new picture\n      let pics = this.state.picIds\n      pics.push(id)\n      console.log(id)\n      this.setState({ picIds: pics});\n      this.setState({ correct: true });\n      // Add to score\n      // Shuffle\n      this.update();\n\n    }\n\n  }\n\n  render() {\n    return (\n      <Container>\n        <Nav\n          start={this.state.start}\n          correct={this.state.correct}\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n\n        <PictureContainer>\n\n          {this.state.pictures.map(picture => (\n            <Picture\n              id={picture.id}\n              key={picture.key}\n              image={picture.image}\n              onClick={this.handleOnClick}\n            />\n          ))}\n        </PictureContainer>\n\n      </Container>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}