{"ast":null,"code":"var _jsxFileName = \"/Users/nadinebundschuh/Desktop/UCBE-bootcamp/18-ClickyGame/memoryGame/memory-app/src/App.js\";\nimport React, { Component } from 'react'; // import PictureContainer from \"./components/PictureContainer\";\n\nimport { Container } from \"./components/Grid\";\nimport Nav from \"./components/Nav\"; // import Footer from \"./components/Footer\";\n\nimport './App.css';\nimport pictures from \"./photos.json\";\nimport PictureContainer from './components/PictureContainer';\nimport Picture from \"./components/Picture\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pictures,\n      picIds: [],\n      start: false,\n      correct: false,\n      score: 0,\n      topScore: 0\n    };\n\n    this.shuffle = () => {\n      // Shuffle pictures\n      this.state.pictures.sort(() => Math.random() - 0.5);\n    };\n\n    this.update = () => {\n      // Increase Score\n      this.setState({\n        score: this.state.score + 1\n      }); // Check Top Score\n\n      this.checkTopScore(); // Shuffle board\n\n      this.shuffle();\n    };\n\n    this.checkTopScore = () => {\n      // If high score beat\n      if (this.state.score > this.state.topScore) {\n        // Update high score\n        this.setState({\n          topScore: this.state.score\n        });\n      }\n    };\n\n    this.reset = () => {\n      // Shuffle cards\n      this.setState({\n        start: false\n      }); // Reset score\n\n      this.setState({\n        score: 0\n      }); // Reset pic\n    };\n\n    this.handleOnClick = id => {\n      // if picture empty \n      // Start game \n      if (pictures.length === 0) {\n        this.setState({\n          start: true\n        });\n      } // Check if id in pictures\n\n\n      if (this.state.picIds.includes(id)) {\n        console.log(\"hello\"); // set correct to false\n\n        this.setState({\n          correct: false\n        }); // Reset\n\n        this.reset();\n      } else {\n        // Clicked new picture\n        let pics = this.state.picIds;\n        pics.push(id);\n        console.log(pics);\n        this.setState({\n          picIds: pics\n        });\n        this.setState({\n          correct: true\n        }); // Update score and board\n\n        this.update();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      start: this.state.start,\n      correct: this.state.correct,\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PictureContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, this.state.pictures.map(picture => /*#__PURE__*/React.createElement(Picture, {\n      id: picture.id,\n      key: picture.key,\n      image: picture.image,\n      onClick: this.handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nadinebundschuh/Desktop/UCBE-bootcamp/18-ClickyGame/memoryGame/memory-app/src/App.js"],"names":["React","Component","Container","Nav","pictures","PictureContainer","Picture","App","state","picIds","start","correct","score","topScore","shuffle","sort","Math","random","update","setState","checkTopScore","reset","handleOnClick","id","length","includes","console","log","pics","push","render","map","picture","key","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PictureContainer from \"./components/PictureContainer\";\nimport { Container} from \"./components/Grid\";\nimport Nav from \"./components/Nav\";\n// import Footer from \"./components/Footer\";\nimport './App.css';\nimport pictures from \"./photos.json\"\nimport PictureContainer from './components/PictureContainer';\nimport Picture from \"./components/Picture\";\n\n\nclass App extends Component {\n  state = {\n    pictures,\n    picIds: [],\n    start: false,\n    correct: false,\n    score: 0,\n    topScore: 0\n\n  };\n\n\n  shuffle = () => {\n    // Shuffle pictures\n    this.state.pictures.sort(() => Math.random() - 0.5);\n\n  }\n\n  update = () => {\n    // Increase Score\n    this.setState({score: this.state.score + 1});\n    // Check Top Score\n    this.checkTopScore();\n    // Shuffle board\n    this.shuffle();\n  }\n\n  checkTopScore = () => {\n    // If high score beat\n    if (this.state.score > this.state.topScore) {\n      // Update high score\n      this.setState({topScore: this.state.score});\n    }\n  }\n\n  reset = () => {\n    // Shuffle cards\n    this.setState( { start: false });\n    // Reset score\n    this.setState({score: 0});\n    // Reset pic\n\n  }\n\n  handleOnClick = (id) => {\n    // if picture empty \n    // Start game \n    if (pictures.length === 0) {\n      this.setState({ start: true });\n    }\n    // Check if id in pictures\n    if (this.state.picIds.includes(id)) {\n      console.log(\"hello\");\n      // set correct to false\n      this.setState({ correct: false });\n      // Reset\n      this.reset();\n    } else {\n      // Clicked new picture\n      let pics = this.state.picIds\n      pics.push(id)\n      console.log(pics)\n      this.setState({ picIds: pics});\n      this.setState({ correct: true });\n      // Update score and board\n      this.update();\n\n    }\n\n  }\n\n  render() {\n    return (\n      <Container>\n        <Nav\n          start={this.state.start}\n          correct={this.state.correct}\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n\n        <PictureContainer>\n\n          {this.state.pictures.map(picture => (\n            <Picture\n              id={picture.id}\n              key={picture.key}\n              image={picture.image}\n              onClick={this.handleOnClick}\n            />\n          ))}\n        </PictureContainer>\n\n      </Container>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}